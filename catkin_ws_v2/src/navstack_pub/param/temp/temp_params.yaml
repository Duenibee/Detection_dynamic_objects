TrajectoryPlannerROS:
  max_vel_x: 0.12
  min_vel_x: 0.11

  max_vel_y: 0.12
  min_vel_y: 0.11
  #max_vel_theta: 0.05
  #min_vel_theta: -0.05
  #min_in_place_vel_theta: 0.05

  #acc_lim_theta: 0.07
  #acc_lim_x: 0.25
  #acc_lim_Y: 0.25

  holonomic_robot: true

  meter_scoring: true

  xy_goal_tolerance: 0.15
  yaw_goal_tolerance: 0.25

#base_global_planner: navfn/NavfnROS
base_global_planner: global_planner/GlobalPlanner
#base_global_planner: carrot_planner/CarrotPlanner

base_local_planner: dwa_local_planner/DWAPlannerROS
#base_local_planner: base_local_planner/TrajectoryPlannerROS
#base_local_planner: teb_local_planner/TebLocalPlannerROS

recovery_behavior_enabled: false



shutdown_costmaps: false

controller_frequency: 5.0
controller_patience: 3.0


planner_frequency: 1.0
planner_patience: 5.0

oscillation_timeout: 10.0
oscillation_distance: 0.2


DWAPlannerROS:
  #Set the acceleration limits of the robot
  acc_lim_th: 0.3
  acc_lim_x: 0.2
  acc_lim_y: 0.2

  #Set the velocity limits of the robot
  max_vel_x: 0.10
  min_vel_x: 0.05
  max_vel_y: 0.10
  min_vel_y: 0.05
  max_vel_theta: 0.1
  min_vel_theta: -0.1
  max_rotational_vel: 0.1
  min_in_place_rotational_vel: 0.1
  min_in_place_vel_theta: 0.1

  max_rot_vel: 0.1
  min_rot_vel: 0.01

  max_trans_vel: 0.1
  min_trans_vel: 0.05

  #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.2

  #For this example, we'll use a holonomic robot
  holonomic_robot: true

  #Set the tolerance on achieving a goal
  xy_goal_tolerance: 0.1
  yaw_goal_tolerance: 0.1
  latch_xy_goal_tolerance: true



  #Parameters for scoring trajectories
  goal_distance_bias: 0.8
  path_distance_bias: 1.0
  occdist_scale: 0.01
  heading_lookahead: 0.325

  #We'll use the Dynamic Window Approach to control instead of Trajectory Rollout for this example
  dwa: true

  #How far the robot must travel before oscillation flags are reset
  oscillation_reset_dist: 0.05

  #Eat up the plan as the robot moves along it
  prune_plan: false



# TrajectoryPlannerROS:
#   max_vel_x: 0.1
#   min_vel_x: 0.01

#   max_vel_y: 0.1
#   min_vel_y: 0.01
#   max_vel_theta: 0.1
#   min_vel_theta: -0.1
#   min_in_place_vel_theta: 0.05

#   acc_lim_theta: 0.1
#   acc_lim_x: 0.1
#   acc_lim_Y: 0.1

#   holonomic_robot: true

#   meter_scoring: true

#   xy_goal_tolerance: 0.15
#   yaw_goal_tolerance: 0.25


