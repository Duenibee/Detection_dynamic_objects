controller_frequency: 5.0
recovery_behaviour_enabled: true

NavfnROS:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.

TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5
  acc_lim_theta:  3.2

  max_vel_x: 1.0
  min_vel_x: 0.0

  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.2

  holonomic_robot: true
  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 2.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true  

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1


DWAPlannerROS:

## Robot Configuration Parameters ##
  acc_lim_x: 1.0
  acc_lim_y: 0.0
  acc_lim_theta: 1.5 # 각 가속도 제한 (raduis/s^2)
  max_vel_trans: 0.5
  min_vel_trans:  0.0 # 최소 Translational Velocity의 절대값 (m/s)
  max_vel_x: 0.15
  min_vel_x: -0.1 # X 방향 최소 속도 (m/s). 후진이 가능하게 하려면 음수 값을 설정
  max_rot_vel: 0.1 # 최대 회전속도의 절대값 (rad/s)
  min_rot_vel: 0.0 # 최소 회전속도의 절대값 (rad/s)

  max_vel_y: 0.15 # Diffenetial Type Robot의 경우 y 관련 parameter들은 0이어야 함
  min_vel_y: 0.0
 
## Goal Tolerance Parameters for each coordinate ##
  xy_goal_tolerance: 0.2 # 목표 자세와 로봇의 실제 자세와의 x, y 위치 오차 (meter)
  yaw_goal_tolerance: 0.05 # 목표 자세와 로봇의 실제 자세와의 각도 오차 (rad)
  latch_xy_goal_tolerance: false
  # 만약 goal_tolerance가 latch되면 로봇이 목표 위치에 도착했을 때 goal tolerance를 벗어났더라도 회전을 함
        
# Forward Simulation Parameters
  sim_time: 1.5
  vx_samples: 20
  vy_samples: 0
  vth_samples: 40
  controller_frequency: 10.0

  use_sim_time: true         
# Defines the duration of the simulated trajectory. Larger value allow the planner to consider 
# longer trajectories. Too low value allows to pass narrow area and too high value not allows 
# rapid rotation

  controller_frequency: 10.0      
  penalize_negative_x: true
# Trajectory Scoring Parameters
  path_distance_bias: 32.0
  goal_distance_bias: 20.0
  occdist_scale: 0.02
  forward_point_distance: 0.325
  stop_time_buffer: 0.2
  scaling_speed: 0.25
  max_scaling_factor: 0.2

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05    # Minimum distance that the robot need to travel in order to reset the oscillation detection.
                                  # If the robot`s position change distance samller than this threshshold, it indicates that the robot is osciilatng 
                                  # and planner needs to take action to break out of the oscillation

# Debugging
  publish_traj_pc : true          # Set Trajectory Debugging
  publish_cost_grid_pc: true      # Set costmap Debugging 
  
  holonomic_robot: true